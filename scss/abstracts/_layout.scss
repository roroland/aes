@use 'colors' as *;
@use 'variables' as *;
@use 'functions' as *;


html{
  font-size: 100%;
  height: 100%;
  line-height: 1.35;
  scroll-behavior: smooth;
  @media only screen and (max-width: 47.99em){
    font-size: 85%;
  }
  @media only screen and (min-width: 90em){
    font-size: 125%;
  }  
}

body{
  background-color: $light;
  display: grid;
  display: grid;
  grid-template-rows: auto min-content min-content;
  min-height: 100vh;
}
header,
main,
footer{
  display: grid;
  grid-template-columns: minmax(clamp($component-space-tiny, 1vw, $component-space), 1fr)  [cont-start] minmax(clamp(0em, 1vw, $component-space), var(--maxContent)) [cont-end] minmax(clamp($component-space-tiny, 1vw, $component-space), 1fr) ;
  >*{
    grid-column: cont-start / cont-end;
  }
}

article{
  &:not(:first-of-type){
    margin: $component-space 0;
  }
  h2{
    color: $darker;
    font-family: 'Kalam', cursive;
    text-transform: uppercase;
    margin-bottom: $component-space;
  }
  p img{
    border-radius: 8px;
    max-width: 100%;
    margin: $component-space-small 0;
    @media only screen and (min-width:48em){
      float: left;
      clear: right;
      margin: 0 $component-space 0 0;
      max-width: 38vw;
    }
  }

  p{
    margin-bottom: $component-space-small;
  }
}

.top-left{
  align-self: flex-start;
  justify-self: flex-start;
  grid-row-start: 1;
  grid-column: 1/-1;
  z-index: 1;
}
.bottom-right{
  align-self: flex-end;
  justify-self: flex-end;
  grid-row-end: -1;
  grid-column: 1/-1;
  z-index: 1;
}

main{
  grid-column: 1/-1;
  background: url('../../images/texture.jpg') repeat-y;
  mix-blend-mode: darken;
  > div{
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: min-content 1fr min-content;
  }
  .steam{
    justify-self: center;
    margin-bottom: calc(#{$component-space} * 2);
    max-width: 150px;
    mix-blend-mode: exclusion;
    opacity: .85;
    transition: opacity .3s ease-out;
    &:hover{
      opacity: .5;
    }
  }
}

.footer{
  background-color: $lightest;
  padding-top: $component-space * 2;
  > div {
    display: grid;
    grid-template-columns: 45% 1fr;
    gap: $component-space-small;
    @media only screen and (max-width:48em){
      img{
        max-width: 100px;
      }
    }
    h3{
      color: rgba(#{var(--darkgray-a)}, .75);
      margin-bottom: $component-space;
      @media only screen and (max-width:48em){
        font-size: var(--tys-m);
      }
    }
    ul{
      display: inline-block;
      li{
        margin-bottom: $component-space;
        font-size: var(--tys-s);
        flex: 1;
        word-break: break-all;
        a{
          color: $accent;
        }
      }
    }
    a{
      align-items: flex-end;
      word-wrap: break-word;
      color: $accent;
    }
    .privacy{
      grid-column: 1/-1;
      font-size: rel(12px);
      text-align: center;
      padding: $component-space-small;
      margin-top: $component-space;
    }
  }
}